name: branch "develop"

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest

    name: ${{ matrix.config.dirname }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - { url:      "https://developer.arm.com/-/media/Files/downloads/gnu-a/8.2-2019.01/gcc-arm-8.2-2019.01-x86_64-aarch64-elf.tar.xz",
            tarname:  "gcc-arm-8.2-2019.01-x86_64-aarch64-elf.tar.xz",
            dirname:  "gcc-arm-8.2-2019.01-x86_64-aarch64-elf",
            prefix:   "aarch64-elf-" }
        - { url:      "https://developer.arm.com/-/media/Files/downloads/gnu-a/8.3-2019.03/binrel/gcc-arm-8.3-2019.03-x86_64-aarch64-elf.tar.xz",
            tarname:  "gcc-arm-8.3-2019.03-x86_64-aarch64-elf.tar.xz",
            dirname:  "gcc-arm-8.3-2019.03-x86_64-aarch64-elf",
            prefix:   "aarch64-elf-" }
        - { url:      "https://developer.arm.com/-/media/Files/downloads/gnu-a/9.2-2019.12/binrel/gcc-arm-9.2-2019.12-x86_64-aarch64-none-elf.tar.xz",
            tarname:  "gcc-arm-9.2-2019.12-x86_64-aarch64-none-elf.tar.xz",
            dirname:  "gcc-arm-9.2-2019.12-x86_64-aarch64-none-elf",
            prefix:   "aarch64-none-elf-" }
        qemu: [ qemu-4.2.0 ]

    steps:
    - uses: actions/checkout@v1

    - name: Cache QEMU ${{ matrix.qemu }}
      id: qemu-cache-id
      uses: actions/cache@v1
      with:
        path: ~/local/${{ matrix.qemu }}
        key: ${{ runner.os }}-qemu

    - name: Install QEMU ${{ matrix.qemu }}
      if: steps.qemu-cache-id.outputs.cache-hit != 'true'
      run: |
        cd
        wget -nv https://download.qemu.org/${{ matrix.qemu }}.tar.xz
        tar xf ${{ matrix.qemu }}.tar.xz
        cd ${{ matrix.qemu }}
        ./configure --prefix=$HOME/local/${{ matrix.qemu }} --target-list=aarch64-softmmu
        make -j
        make install

    - name: Cache Compiler ${{ matrix.config.dirname }}
      id: compiler-cache-id
      uses: actions/cache@v1
      with:
        path: ~/local/${{ matrix.config.dirname }}
        key: ${{ runner.os }}-compiler-${{ matrix.config.dirname }}

    - name: Install Compiler ${{ matrix.config.dirname }}
      if: steps.compiler-cache-id.outputs.cache-hit != 'true'
      run: |
        cd
        wget -nv -O ${{ matrix.config.tarname }} ${{ matrix.config.url }}
        tar -x -f ${{ matrix.config.tarname }} -C ~/local
 
    - name: Set Compiler Path ${{ matrix.config.dirname }}
        run: echo ::set-env name=PATH::$(echo "$HOME/local/${{ matrix.config.dirname }}/bin:$PATH")

    - name: Update submodules
      run: git submodule update --init --recursive
                
    - name: Configure for AArch64 Raspberry Pi with QEMU support
      run: ./configure -p ${{ matrix.config.prefix }} -r 3 --qemu
        
    - name: Build libraries
      run: make -j

    - name: Build samples
      run: make build-samples
      
    - name: Run smoke test with QEMU
      run: |
        make -C libs/circle/addon/qemu
        make -C samples/05-smoketest
        $HOME/local/${{ matrix.qemu }}/bin/qemu-system-aarch64 -M raspi3 -kernel samples/05-smoketest/kernel8.img -display none -nographic -semihosting
