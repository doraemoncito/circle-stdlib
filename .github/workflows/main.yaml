name: branch "master"

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest

    name: ${{ matrix.config.dirname }}

    strategy:
      fail-fast: false
      matrix:
        config:
        - { url:      "https://developer.arm.com/-/media/Files/downloads/gnu-a/10.2-2020.11/binrel/gcc-arm-10.2-2020.11-x86_64-arm-none-eabi.tar.xz",
            tarname:  "gcc-arm-10.2-2020.11-x86_64-arm-none-eabi.tar.xz",
            dirname:  "gcc-arm-10.2-2020.11-x86_64-arm-none-eabi",
            prefix:   "arm-none-eabi-",
            raspi:    "2" }
        - { url:      "https://developer.arm.com/-/media/Files/downloads/gnu-a/10.2-2020.11/binrel/gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf.tar.xz",
            tarname:  "gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf.tar.xz",
            dirname:  "gcc-arm-10.2-2020.11-x86_64-aarch64-none-elf",
            prefix:   "aarch64-none-elf-",
            raspi:    "3" }

    steps:
    - name: Select 32-bit QEMU
      if: matrix.config.raspi == '2'
      run: |
        echo "CFG_QEMU_BIN=$HOME/local/qemu-92e53233-32/bin/qemu-system-arm" >> $GITHUB_ENV
        echo "CFG_QEMU_OPT=-bios" >> $GITHUB_ENV
        echo "CFG_QEMU_IMG=kernel7.img" >> $GITHUB_ENV

    - name: Select 64-bit QEMU
      if: matrix.config.raspi == '3'
      run: |
        echo "CFG_QEMU_BIN=$HOME/local/qemu-4.2.0-64/bin/qemu-system-aarch64" >> $GITHUB_ENV
        echo "CFG_QEMU_OPT=-kernel" >> $GITHUB_ENV
        echo "CFG_QEMU_IMG=kernel8.img" >> $GITHUB_ENV

    - name: Checkout circle-stdlib
      uses: actions/checkout@v1

    # - name: Cache QEMU 64-bit
    #   id: qemu-4_2_0-64-cache-id
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/local/qemu-4.2.0-64
    #     key: ${{ runner.os }}-qemu-4_2_0-64

    # - name: Install QEMU 64-bit
    #   if: steps.qemu-4_2_0-64-cache-id.outputs.cache-hit != 'true'
    #   run: |
    #     cd
    #     wget -nv https://download.qemu.org/qemu-4.2.0.tar.xz
    #     tar xf qemu-4.2.0.tar.xz
    #     cd qemu-4.2.0
    #     ./configure --prefix=$HOME/local/qemu-4.2.0-64 --target-list=aarch64-softmmu
    #     make -j
    #     make install

    - name: Cache QEMU 32-bit
      id: qemu-92e53233-32-cache-id
      uses: actions/cache@v1
      with:
        path: ~/local/qemu-92e53233-32
        key: ${{ runner.os }}-qemu-92e53233-32

    - name: Clone QEMU 32-bit Repository
      if: steps.qemu-92e53233-32-cache-id.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: rsta2/qemu
        ref: 92e53233035e6bef24ce79e9cebd45d670de3902
        path: qemu-32

    - name: Build QEMU 32-bit     
      if: steps.qemu-92e53233-32-cache-id.outputs.cache-hit != 'true'
      run: |
        set -x
        uname -a
        sudo apt install python2
        python2 -V
        which python2
        cd $GITHUB_WORKSPACE/qemu-32
        git submodule update --init dtc
        echo Run configure --help
        ./configure --help
        # ./configure --python=/usr/bin/python2 --prefix=$HOME/local/qemu-92e53233-32 --target-list=arm-softmmu
        # make -j
        # make install

    # - name: Cache Compiler ${{ matrix.config.dirname }}
    #   id: compiler-cache-id
    #   uses: actions/cache@v1
    #   with:
    #     path: ~/local/${{ matrix.config.dirname }}
    #     key: ${{ runner.os }}-compiler-${{ matrix.config.dirname }}

    # - name: Install Compiler ${{ matrix.config.dirname }}
    #   if: steps.compiler-cache-id.outputs.cache-hit != 'true'
    #   run: |
    #     cd
    #     wget -nv -O ${{ matrix.config.tarname }} ${{ matrix.config.url }}
    #     tar -x -f ${{ matrix.config.tarname }} -C ~/local
 
    # - name: Set Compiler Path ${{ matrix.config.dirname }}
    #   run: echo "$HOME/local/${{ matrix.config.dirname }}/bin" >> $GITHUB_PATH

    # - name: Update submodules
    #   run: git submodule update --init --recursive
                
    # - name: Configure circle-stdlib with QEMU support
    #   run: ./configure -p ${{ matrix.config.prefix }} -r ${{ matrix.config.raspi }} --qemu
        
    # - name: Build libraries
    #   run: make -j

    # - name: Build samples
    #   run: make build-samples
      
    # - name: Run smoke test with QEMU
    #   run: |
    #     make -C samples/05-smoketest
    #     # Extract blank SD card image
    #     rm -f samples/05-smoketest/sdcard.img
    #     unzip -d samples/05-smoketest samples/05-smoketest/sdcard.img.zip
    #     # Guard against endless loop in QEMU run (120 CPU secs)
    #     ulimit -t 120
    #     $CFG_QEMU_BIN -M raspi${{ matrix.config.raspi }} $CFG_QEMU_OPT samples/05-smoketest/$CFG_QEMU_IMG -display none -nographic -semihosting -sd samples/05-smoketest/sdcard.img
